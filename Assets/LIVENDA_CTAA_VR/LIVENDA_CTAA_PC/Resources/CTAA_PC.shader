//=====================================================================================
// CTAA V3 Cinematic Temporal Anti-Aliasing Copyright 2017-2018 Livenda Labs Pty Ltd 
//=====================================================================================

Shader "Hidden/CTAA_PC" {
Properties {
	_MainTex ("Base (RGB)", 2D) = "white" {}
	
}

SubShader {
	ZTest Always Cull Off ZWrite Off Fog { Mode Off }
	Pass {

CGPROGRAM
#pragma target 3.0
#pragma vertex vert
#pragma fragment frag
#pragma fragmentoption ARB_precision_hint_fastest
#pragma glsl
#pragma exclude_renderers d3d11_9x
#include "UnityCG.cginc"


            
float4 _MainTex_TexelSize;
uniform sampler2D _MainTex;
uniform sampler2D _Accum;
uniform sampler2D _Motion0;
uniform sampler2D _CameraDepthTexture;
uniform float _motionDelta;
uniform float _motionDeltaDynamic;
uniform float _AdaptiveResolve;
float4 _ControlParams;

sampler2D_half _CameraMotionVectorsTexture;

float _RenderPath;
sampler2D _CameraDepthNormalsTexture;

uniform float4 _Sensitivity; 
uniform float _SampleDistance;

//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI
inline half FDGHHFGHFGHFHDFGDFG (half2 THVHBHGD, float UYBDFBSRGT, half4 UYBDFBSRGTGFGREGDFG)
	{
		
		_Sensitivity.y = 1;
		_Sensitivity.x = 1;	

		half2 UYBDFBSRGTGFGREGDFGREGG = abs(THVHBHGD - UYBDFBSRGTGFGREGDFG.xy) * _Sensitivity.y;
		int UYBDFBSRGTGFGREGDFGREGGRGREG = (UYBDFBSRGTGFGREGDFGREGG.x + UYBDFBSRGTGFGREGDFGREGG.y) * _Sensitivity.y < 0.1;
		float UYBDFBSRGTGFGREGDFGREGGRGREGRERG = DecodeFloatRG (UYBDFBSRGTGFGREGDFG.zw);
		float UYBDFBSRGTGFGREGDFGREGGRGREGRERGRGREG = abs(UYBDFBSRGT-UYBDFBSRGTGFGREGDFGREGGRGREGRERG);
		int isSameDepth = UYBDFBSRGTGFGREGDFGREGGRGREGRERGRGREG * _Sensitivity.x < 0.09 * UYBDFBSRGT;

		return UYBDFBSRGTGFGREGDFGREGGRGREG * isSameDepth ? 1.0 : 0.0;

	}

	//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI

	float max3(float x, float y, float z) { return max(x, max(y, z)); }
	float3 tMMMsF(float3 c) { return c *rcp(saturate(max3(c.r, c.g, c.b)/160) + 1); }
	float3 tMMMsFiNNv(float3 c) { return c / (1-(max3(c.r, c.g, c.b)/30) ); }


float UYBDFBSRGTFGBRGRGRGRGWREG(float3 Color)
{
	return (Color.g * 2.0) + (Color.r + Color.b);
}

inline float UYBDFBSRGTFGGRGRGWREGTYYRS(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(UYBDFBSRGTFGBRGRGRGRGWREG(Color) * UYBDFBSRWEVSGTFGGRGRGWREGTYYRS + 4.0);
}

float UYBDFBSRWEVSGTFGGRERGRGWREGTYYRS(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(Color.g * UYBDFBSRWEVSGTFGGRGRGWREGTYYRS + 1.0);
}

float UYBDJHJHGJHDFGDG(float Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(Color * UYBDFBSRWEVSGTFGGRGRGWREGTYYRS + 1.0);
}

float UYBDJHJHGJHDFGDGHNNTTRE(float Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(Color * UYBDFBSRWEVSGTFGGRGRGWREGTYYRS + 4.0);
}

inline float UYBDJHJHGJHDFGDGHNNTTREDFGDFWW(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return 4.0 * rcp(UYBDFBSRGTFGBRGRGRGRGWREG(Color) * (-UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) + 1.0);
}

float UYBDJHJHGJHDFGDGHNNTTREDFGDFWWFDSDF(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(Color.g * (-UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) + 1.0);
}

float UYBDJHJHGJHDFGDGHNNTTREDFGDFWWFDSDFDFGRG(float Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return 4.0 * rcp(Color * (-UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) + 1.0);
}

float UYBDJNNNBVVVNDSDFDFGRG(float Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(Color * (-UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) + 1.0);
}


float UYBDJNNNBVVVNDSDFDFGRGDFGG(float UYBDJNNNBVVVNDSDFDFGRGDFGGQQE, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return UYBDJNNNBVVVNDSDFDFGRGDFGGQQE * UYBDJHJHGJHDFGDGHNNTTREDFGDFWWFDSDFDFGRG(UYBDJNNNBVVVNDSDFDFGRGDFGGQQE, UYBDFBSRWEVSGTFGGRGRGWREGTYYRS);
}


float BSDGGHER(float UYBDJNNNBVVVNDSDFDFGRGDFGGQQE, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return UYBDJNNNBVVVNDSDFDFGRGDFGGQQE * UYBDJNNNBVVVNDSDFDFGRG(UYBDJNNNBVVVNDSDFDFGRGDFGGQQE, UYBDFBSRWEVSGTFGGRGRGWREGTYYRS);
}


float BSDGGHERDFGNTY(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	float L = UYBDFBSRGTFGBRGRGRGRGWREG(Color);
	return L * UYBDJHJHGJHDFGDGHNNTTRE(L, UYBDFBSRWEVSGTFGGRGRGWREGTYYRS);
}

float BSDGGHERDFGNTYDFGRGRG(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return Color.g * UYBDJHJHGJHDFGDG(Color.g, UYBDFBSRWEVSGTFGGRGRGWREGTYYRS);
}

float BSDJTTFDDFGEGRGRG(float3 Color) 
{
	
		return dot(Color, float3(0.299, 0.587, 0.114));
	
}

float BSDJTTFDDFGEGRGRGHRGRRGRG(float UYBDJNNNBVVVNDSDFDFGRGDFGGQQE) 
{
	return UYBDJNNNBVVVNDSDFDFGRGDFGGQQE * rcp(1.0 + UYBDJNNNBVVVNDSDFDFGRGDFGGQQE);
}
	
float BSDJTTFDDFGEGRGRGHRGRRGRGRGWWWE(float UYBDJNNNBVVVNDSDFDFGRGDFGGQQE) 
{
	return UYBDJNNNBVVVNDSDFDFGRGDFGGQQE * rcp(1.0 - UYBDJNNNBVVVNDSDFDFGRGDFGGQQE);
}

float BSDJTTFDDFGREGREGFNDRGRGRGWWWE(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return sqrt(BSDJTTFDDFGEGRGRGHRGRRGRG(BSDJTTFDDFGEGRGRG(Color) * UYBDFBSRWEVSGTFGGRGRGWREGTYYRS));
}

float BSDJTTFDOOIIERRGRGRGWWWE(float UYBDJNNNBVVVNDSDFDFGRGDFGGQQE) 
{

	return BSDJTTFDDFGEGRGRGHRGRRGRGRGWWWE(UYBDJNNNBVVVNDSDFDFGRGDFGGQQE * UYBDJNNNBVVVNDSDFDFGRGDFGGQQE);
}

inline float HGFHTNFGDGRFDG(float3 FGHBYUUUYYYU, float3 RGHGLFGDGEREGG, float3 RGHGREGERGERGLFGDGEREGG)
{
	
	float3 REGREGFFDG = rcp(FGHBYUUUYYYU);
	float3 REGRRGREGREGEGFFDG = (  RGHGREGERGERGLFGDGEREGG  - RGHGLFGDGEREGG) * REGREGFFDG;
	float3 RGERGVSSSSEGFFDG = ((-RGHGREGERGERGLFGDGEREGG) - RGHGLFGDGEREGG) * REGREGFFDG;
	return max(max(min(REGRRGREGREGEGFFDG.x, RGERGVSSSSEGFFDG.x), min(REGRRGREGREGEGFFDG.y, RGERGVSSSSEGFFDG.y)), min(REGRRGREGREGEGFFDG.z, RGERGVSSSSEGFFDG.z));
}

inline float ERGERGREEUTYERTVSSSSEGFFDG(float3 TYBFDREEUTYERTVSSSSEGFFDG, float3 TYBFDREEUTRGRGRRE, float3 TYBFDREEWWEUTRGRGRRE, float3 TYBFDREEWWEUTREDRGRGRREEEW)
{
	float3 REGRGREYYREEEW = min(TYBFDREEUTRGRGRRE, min(TYBFDREEWWEUTRGRGRRE, TYBFDREEWWEUTREDRGRGRREEEW));
	float3 TTBBBFYREEEW = max(TYBFDREEUTRGRGRRE, max(TYBFDREEWWEUTRGRGRRE, TYBFDREEWWEUTREDRGRGRREEEW));	
	float3 YRWWEUTREDRGRGRREEEW = TTBBBFYREEEW + REGRGREYYREEEW;
	float3 FGHBYUUUYYYU = TYBFDREEUTRGRGRRE - TYBFDREEUTYERTVSSSSEGFFDG;
	float3 RGHGLFGDGEREGG = TYBFDREEUTYERTVSSSSEGFFDG - YRWWEUTREDRGRGRREEEW * 0.5;
	float3 REGEDRGRGRREEEW = TTBBBFYREEEW - YRWWEUTREDRGRGRREEEW * 0.5;
	return saturate(HGFHTNFGDGRFDG(FGHBYUUUYYYU, RGHGLFGDGEREGG, REGEDRGRGRREEEW));	
}

float YRTGERERGGGRERD(float3 Color, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	return rcp(max(BSDJTTFDDFGEGRGRG(Color) * UYBDFBSRWEVSGTFGGRGRGWREGTYYRS, 1.0));
}

float4 RREGGGGRRGGGGRERD(float4 ColorA, float4 ColorB, float Blend, float UYBDFBSRWEVSGTFGGRGRGWREGTYYRS) 
{
	float HHHJJRRERGGRERD = (1.0 - Blend) * YRTGERERGGGRERD(ColorA.rgb, UYBDFBSRWEVSGTFGGRGRGWREGTYYRS);
	float BlendB =        Blend  * YRTGERERGGGRERD(ColorB.rgb, UYBDFBSRWEVSGTFGGRGRGWREGTYYRS);
	float RcpBlend = rcp(HHHJJRRERGGRERD + BlendB);
	HHHJJRRERGGRERD *= RcpBlend;
	BlendB *= RcpBlend;
	return ColorA * HHHJJRRERGGRERD + ColorB * BlendB;
}



struct v2f {
	float4 pos : POSITION;
	float2 FDDFFDTRETRET : TEXCOORD0;
};

v2f vert( appdata_img v )
{
	v2f o;
	o.pos = UnityObjectToClipPos (v.vertex);
	o.FDDFFDTRETRET = v.texcoord.xy;

	/*
	#if UNITY_UV_STARTS_AT_TOP
		o.FDDFFDTRETRET = v.texcoord.xy;
		if (_MainTex_TexelSize.y < 0)
			o.FDDFFDTRETRET.y = 1-o.FDDFFDTRETRET.y;
		#endif		
		*/

	return o;
}

//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI
float4 frag (v2f i) : COLOR
{

 //adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
 //AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
 //YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI
 float2 FVBHHJEREERD;
 float2 FVBHHJEREERDFGGE;

		
 float  DFKJGDJHGJHJHGFDFDFDF = _ControlParams.x;
  
 float2  TUYUSDUSDUYSDUGSD = _MainTex_TexelSize.xy;


 float GFGTTRTRTRTRDD = 0.4999;
 float2 CVVDFFDDFRRRERR[4];
 
 CVVDFFDDFRRRERR[0] = float2( -TUYUSDUSDUYSDUGSD.x, -TUYUSDUSDUYSDUGSD.y )*GFGTTRTRTRTRDD;
 CVVDFFDDFRRRERR[1] = float2(  TUYUSDUSDUYSDUGSD.x, -TUYUSDUSDUYSDUGSD.y )*GFGTTRTRTRTRDD;
 CVVDFFDDFRRRERR[2] = float2( -TUYUSDUSDUYSDUGSD.x,  TUYUSDUSDUYSDUGSD.y )*GFGTTRTRTRTRDD;
 CVVDFFDDFRRRERR[3] = float2(  TUYUSDUSDUYSDUGSD.x,  TUYUSDUSDUYSDUGSD.y )*GFGTTRTRTRTRDD;

 /*
  
 float DFGDFGRRYUIOTRDDSV[4];
 DFGDFGRRYUIOTRDDSV[0] = 1-Linear01Depth(tex2D (_CameraDepthTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[0] ).x);
 DFGDFGRRYUIOTRDDSV[1] = 1-Linear01Depth(tex2D (_CameraDepthTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[1] ).x);
 DFGDFGRRYUIOTRDDSV[2] = 1-Linear01Depth(tex2D (_CameraDepthTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[2] ).x);
 DFGDFGRRYUIOTRDDSV[3] = 1-Linear01Depth(tex2D (_CameraDepthTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[3] ).x);
 
 int DFGDFVQW;
 if(DFGDFGRRYUIOTRDDSV[0] > DFGDFGRRYUIOTRDDSV[1]) DFGDFVQW = 0;
 else DFGDFVQW = 1;
 
 int DFGDFVQWDFGFG;
 if(DFGDFGRRYUIOTRDDSV[2] > DFGDFGRRYUIOTRDDSV[3]) DFGDFVQWDFGFG = 2;
 else DFGDFVQWDFGFG = 3;
 
 int DFGDFVQWDFGFGSDFSDF;
 if(DFGDFGRRYUIOTRDDSV[DFGDFVQW] > DFGDFGRRYUIOTRDDSV[DFGDFVQWDFGFG]) DFGDFVQWDFGFGSDFSDF = DFGDFVQW;
 else DFGDFVQWDFGFGSDFSDF = DFGDFVQWDFGFG;
 
 int DFGDFVQWDFGFGSDFSDFSEFEF;
 if(DFGDFGRRYUIOTRDDSV[0] < DFGDFGRRYUIOTRDDSV[1]) DFGDFVQWDFGFGSDFSDFSEFEF = 0;
 else DFGDFVQWDFGFGSDFSDFSEFEF = 1;
 
 int DFGDFVQWDFGFGSDFSDFSEFEFDFG;
 if(DFGDFGRRYUIOTRDDSV[2] < DFGDFGRRYUIOTRDDSV[3]) DFGDFVQWDFGFGSDFSDFSEFEFDFG = 2;
 else DFGDFVQWDFGFGSDFSDFSEFEFDFG = 3;
 
 int DFGDFVQWDFGFGSDFSDFSEFEFDFGEFEE;
 if(DFGDFGRRYUIOTRDDSV[DFGDFVQWDFGFGSDFSDFSEFEF] < DFGDFGRRYUIOTRDDSV[DFGDFVQWDFGFGSDFSDFSEFEFDFG]) DFGDFVQWDFGFGSDFSDFSEFEFDFGEFEE = DFGDFVQWDFGFGSDFSDFSEFEF;
 else DFGDFVQWDFGFGSDFSDFSEFEFDFGEFEE = DFGDFVQWDFGFGSDFSDFSEFEFDFG;


 float2 MMMMGFFDDFG = float2(0,0);
 
 if( DFGDFGRRYUIOTRDDSV[DFGDFVQWDFGFGSDFSDF] > GFGGFGUGSD)
 {
 	MMMMGFFDDFG = CVVDFFDDFRRRERR[DFGDFVQWDFGFGSDFSDF];
 }

 */

//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI

 half2 GGSGSDGYRERFDDFG = tex2D(_CameraMotionVectorsTexture, i.FDDFFDTRETRET).rg;
 FVBHHJEREERD =   GGSGSDGYRERFDDFG;


 		half4 DFGGRUULLLLL = tex2D(_CameraDepthNormalsTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[3] );
		half4 RGREGRGBCBCVD = tex2D(_CameraDepthNormalsTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[0] );
		half4 RGREGRDGGRRGR = tex2D(_CameraDepthNormalsTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[2] );
		half4 RGREGRDEFFEEFEFWF = tex2D(_CameraDepthNormalsTexture, i.FDDFFDTRETRET + CVVDFFDDFRRRERR[1] );

		half RGREGRDGDSGEEGEGDS = 1.0;
		
		RGREGRDGDSGEEGEGDS *= FDGHHFGHFGHFHDFGDFG(DFGGRUULLLLL.xy, DecodeFloatRG(DFGGRUULLLLL.zw), RGREGRGBCBCVD);
		RGREGRDGDSGEEGEGDS *= FDGHHFGHFGHFHDFGDFG(RGREGRDGGRRGR.xy, DecodeFloatRG(RGREGRDGGRRGR.zw), RGREGRDEFFEEFEFWF);

		RGREGRDGDSGEEGEGDS = 1-RGREGRDGDSGEEGEGDS;


 float DFGDFGDRYUTRRTDS = 2;
 float DFGDFGDRYURGERGRERVETRETRET = saturate(abs(FVBHHJEREERD.x) * DFGDFGDRYUTRRTDS + abs(FVBHHJEREERD.y) * DFGDFGDRYUTRRTDS);
 	
	half2  FDDFFDTRETRET = i.FDDFFDTRETRET ;
					
	half4 FDDDFGFEWEWE = tex2D(_MainTex, FDDFFDTRETRET.xy - TUYUSDUSDUYSDUGSD );
	half4 FDDDFSDFSDVSDE = tex2D(_MainTex, FDDFFDTRETRET.xy + float2(  0, -TUYUSDUSDUYSDUGSD.y ) );
	half4 FDDDFSDEFEFHHHHHHH = tex2D(_MainTex, FDDFFDTRETRET.xy + float2(  TUYUSDUSDUYSDUGSD.x, -TUYUSDUSDUYSDUGSD.y ) );
	half4 EWEWEWEEEEHHHHHH = tex2D(_MainTex, FDDFFDTRETRET.xy + float2(  -TUYUSDUSDUYSDUGSD.x, 0 ) );
	half4 EWEWEWEERREREERVVHHHH = tex2D(_MainTex, FDDFFDTRETRET.xy);
	half4 EEFEFVVDVEERVVHHHH = tex2D(_MainTex, FDDFFDTRETRET.xy + float2(   TUYUSDUSDUYSDUGSD.x, 0 ) );
	half4 EEFEFVVDVEEREFEDDDF = tex2D(_MainTex, FDDFFDTRETRET.xy + float2( -TUYUSDUSDUYSDUGSD.x,  TUYUSDUSDUYSDUGSD.y ) );
	half4 EEFEFVVDVEEREFEDRREERERRBB = tex2D(_MainTex, FDDFFDTRETRET.xy + float2(  0,  TUYUSDUSDUYSDUGSD.y ) );
	half4 EEEFEFEDRREERERRBB = tex2D(_MainTex, FDDFFDTRETRET.xy + TUYUSDUSDUYSDUGSD );


        DFKJGDJHGJHJHGFDFDFDF = _ControlParams.z;
        		
		FDDDFGFEWEWE.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(FDDDFGFEWEWE.rgb, DFKJGDJHGJHJHGFDFDFDF);
		FDDDFSDFSDVSDE.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(FDDDFSDFSDVSDE.rgb, DFKJGDJHGJHJHGFDFDFDF);
		FDDDFSDEFEFHHHHHHH.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(FDDDFSDEFEFHHHHHHH.rgb, DFKJGDJHGJHJHGFDFDFDF);
		EWEWEWEEEEHHHHHH.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(EWEWEWEEEEHHHHHH.rgb, DFKJGDJHGJHJHGFDFDFDF);
		EWEWEWEERREREERVVHHHH.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(EWEWEWEERREREERVVHHHH.rgb, DFKJGDJHGJHJHGFDFDFDF);
		EEFEFVVDVEERVVHHHH.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(EEFEFVVDVEERVVHHHH.rgb, DFKJGDJHGJHJHGFDFDFDF);
		EEFEFVVDVEEREFEDDDF.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(EEFEFVVDVEEREFEDDDF.rgb, DFKJGDJHGJHJHGFDFDFDF);
		EEFEFVVDVEEREFEDRREERERRBB.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(EEFEFVVDVEEREFEDRREERERRBB.rgb, DFKJGDJHGJHJHGFDFDFDF);
		EEEFEFEDRREERERRBB.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(EEEFEFEDRREERERRBB.rgb, DFKJGDJHGJHJHGFDFDFDF);

		/*									
		half4 TYBFDREEUTRGRGRRE= 
			FDDDFGFEWEWE * 0.0625 + 
			FDDDFSDFSDVSDE * 0.125 +
			FDDDFSDEFEFHHHHHHH * 0.0625 +
			EWEWEWEEEEHHHHHH * 0.125 +
			EWEWEWEERREREERVVHHHH * 0.25 +
			EEFEFVVDVEERVVHHHH * 0.125 +
			EEFEFVVDVEEREFEDDDF * 0.0625 +
			EEFEFVVDVEEREFEDRREERERRBB * 0.125 +
			EEEFEFEDRREERERRBB * 0.0625;

			TYBFDREEUTRGRGRRE = EWEWEWEERREREERVVHHHH ;

			*/

			half4 TYBFDREEUTRGRGRRE = EWEWEWEERREREERVVHHHH ;
			
	
		half4 SDFSDFEEEEEFEFEFE = min(min(FDDDFGFEWEWE, FDDDFSDEFEFHHHHHHH), min(EEFEFVVDVEEREFEDDDF, EEEFEFEDRREERERRBB));		
		half4 SDFSDFEEEFEWBBBBBBDDF = max(max(FDDDFGFEWEWE, FDDDFSDEFEFHHHHHHH), max(EEFEFVVDVEEREFEDDDF, EEEFEFEDRREERERRBB));		
		half4 TYBFDREEWWEUTRGRGRRE = min(min(min(FDDDFSDFSDVSDE, EWEWEWEEEEHHHHHH), min(EWEWEWEERREREERVVHHHH, EEFEFVVDVEERVVHHHH)), EEFEFVVDVEEREFEDRREERERRBB);		
		half4 TYBFDREEWWEUTREDRGRGRREEEW = max(max(max(FDDDFSDFSDVSDE, EWEWEWEEEEHHHHHH), max(EWEWEWEERREREERVVHHHH, EEFEFVVDVEERVVHHHH)), EEFEFVVDVEEREFEDRREERERRBB);		
		SDFSDFEEEEEFEFEFE = min(SDFSDFEEEEEFEFEFE, TYBFDREEWWEUTRGRGRRE);
		SDFSDFEEEFEWBBBBBBDDF = max(SDFSDFEEEFEWBBBBBBDDF, TYBFDREEWWEUTREDRGRGRREEEW);
	    TYBFDREEWWEUTRGRGRRE = TYBFDREEWWEUTRGRGRRE * 0.5 + SDFSDFEEEEEFEFEFE * 0.5;
		TYBFDREEWWEUTREDRGRGRREEEW = TYBFDREEWWEUTREDRGRGRREEEW * 0.5 + SDFSDFEEEFEWBBBBBBDDF * 0.5;
		float4 DFGDFGRREEERGBBBBBBDDF = tex2D(_Accum, i.FDDFFDTRETRET-FVBHHJEREERD);

		DFGDFGRREEERGBBBBBBDDF.xyz = tMMMsF(DFGDFGRREEERGBBBBBBDDF.xyz);

	    DFGDFGRREEERGBBBBBBDDF.rgb *= UYBDFBSRGTFGGRGRGWREGTYYRS(DFGDFGRREEERGBBBBBBDDF.rgb, DFKJGDJHGJHJHGFDFDFDF);
	
		float DFGRRUTRRRGBBBBBBDDF = UYBDFBSRGTFGBRGRGRGRGWREG(TYBFDREEWWEUTRGRGRRE.rgb);
		float FGHGFHTHTHTHBBDDF = UYBDFBSRGTFGBRGRGRGRGWREG(TYBFDREEWWEUTREDRGRGRREEEW.rgb);
		float ERVVREREGHBBDDF = UYBDFBSRGTFGBRGRGRGRGWREG(DFGDFGRREEERGBBBBBBDDF.rgb);
		float FDGFGRRGRGHBBDDFRGRFDSS = FGHGFHTHTHTHBBDDF - DFGRRUTRRRGBBBBBBDDF;
		float RGRGHBBDDFFGFDGRGRFDSSRR = ERGERGREEUTYERTVSSSSEGFFDG(DFGDFGRREEERGBBBBBBDDF.rgb, EWEWEWEERREREERVVHHHH.rgb, TYBFDREEWWEUTRGRGRRE.rgb, TYBFDREEWWEUTREDRGRGRREEEW.rgb);

		DFGDFGRREEERGBBBBBBDDF.rgb = lerp((DFGDFGRREEERGBBBBBBDDF.rgb), EWEWEWEERREREERVVHHHH.rgb, RGRGHBBDDFFGFDGRGRFDSSRR );

		float RGRGRGRGRFDGRGRFDSSRR = lerp(3+_ControlParams.y*0.25,_ControlParams.y,saturate(RGREGRDGDSGEEGEGDS));
		float DFGDFGRRREGRGRFDSSRR = saturate(DFGDFGDRYURGERGRERVETRETRET) * 0.5;
		float LumaContrastFactor =  10-_ControlParams.w;//(RGREGRDGDSGEEGEGDS+EGRRRUUUUYYEERDSD2DD)*_ControlParams.z;//_ControlParams.z;
		
		DFGDFGRRREGRGRFDSSRR = saturate(DFGDFGRRREGRGRFDSSRR + rcp(1.0 + FDGFGRRGRGHBBDDFRGRFDSS * LumaContrastFactor));
		TYBFDREEUTRGRGRRE.rgb = lerp(TYBFDREEUTRGRGRRE.rgb, EWEWEWEERREREERVVHHHH.rgb, DFGDFGRRREGRGRFDSSRR);

		float UUTRTEEWEEFEFDSSRR = (1.0/RGRGRGRGRFDGRGRFDSSRR) + DFGDFGDRYURGERGRERVETRETRET * (1.0/RGRGRGRGRFDGRGRFDSSRR);
		float SDFGRGRGRGRBESSRR = ERVVREREGHBBDDF * UUTRTEEWEEFEFDSSRR * (1.0 + DFGDFGDRYURGERGRERVETRETRET * UUTRTEEWEEFEFDSSRR * 4.0);
		float THDFVSSDGGRERBESSRR = saturate(SDFGRGRGRGRBESSRR * rcp(ERVVREREGHBBDDF + FDGFGRRGRGHBBDDFRGRFDSS));
		float ERGERGRGERGRGDSSRR = lerp(THDFVSSDGGRERBESSRR, (sqrt(THDFVSSDGGRERBESSRR)), saturate(length(FVBHHJEREERD)*_AdaptiveResolve) );
			
		DFGDFGRREEERGBBBBBBDDF.rgb= lerp(DFGDFGRREEERGBBBBBBDDF, TYBFDREEUTRGRGRRE, ERGERGRGERGRGDSSRR);
		DFGDFGRREEERGBBBBBBDDF.rgb *= UYBDJHJHGJHDFGDGHNNTTREDFGDFWW(DFGDFGRREEERGBBBBBBDDF.rgb, DFKJGDJHGJHJHGFDFDFDF);
			
		DFGDFGRREEERGBBBBBBDDF.rgb = (-min(-(DFGDFGRREEERGBBBBBBDDF.rgb), 0.0));

		//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI

	 	return DFGDFGRREEERGBBBBBBDDF;
	 	//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI
//adsfhkaljdfh ADSFJOIEFJ  343J 434343 JLKJ FALDSKJAJLKDSJ LAFHUIH EWL ANIOEFH A AEIFH IHA FIHI FAEOIJ 
//AJFWEOFIA AOIJOAFEW OI JAEWOIFJAJAFEFIOAWEOIUAWEOIFJN  AFJOEJ OEIFAJEWOI JMNAOJ FOAJFAFN LAKHAEUFHLF
//YAFEIU AEF HLKJAHFEUIHAIFN AAFKJH UEUFHA EFI NIAEUFH I AHFEIUH HFIH H  HAFEIUH HIUHIU AHF AIEUHF AFUI
	
}
ENDCG
	}
}

Fallback off

}